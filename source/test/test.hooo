fn test_refl a -> a {
    x : a;
    let y = () : a;
    return y;
}

fn test_sd sd(a, b) -> sd(b, a) {
    x : sd(a, b);
    use std::sd_symmetry;
    let r = sd_symmetry(x) : sd(b, a);
    return r;
}

/*
fn test_pow a -> a^b {
    x : a;
    let r = () : a^b;
    return r;
}
*/

fn foo true -> (a^b -> a^b) {
    fn f a^b -> a^b {
        x : a^b;
        return x;
    }
    return f;
}

