fn imply_transitivity (a => b) & (b => c) -> (a => c) {
    x : a => b;
    y : b => c;
    lam f (a => c) {
        arg : a;
        let x2 = x(arg) : b;
        let x3 = y(x2) : c;
        return x3;
    }
    return f;
}

fn modus_tollens (a => b)  ->  (!b => !a) {
    x : a => b;
    lam f !b => !a {
        y : !b;
        lam g !a {
            z : a;
            let x2 = x(z) : b;
            let r = y(x2) : false;
            return r;
        }
        return g;
    }
    return f;
}

